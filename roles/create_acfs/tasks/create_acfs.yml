- name: Check directory
  stat:
    path: "{{ path }}"
  register: dir

- name: Verify directory is empty
  find:
    paths: 'c{{path}}'
  register: filedir

- name: Check volume
  shell: "asmcmd volinfo --all|grep -w {{ volname }}"
  when: create_acfs
  register: checkvol
  environment: "{{ oracle_env }}"
  ignore_errors: True

- fail:
   msg: "Seems ACFS Volume already exists"
  when: checkvol.rc == 0 and filedir.matched > 0

- name: Creates directory
  file:
   path: "{{ path }}"
   state: directory
   owner: "{{ grid_owner }}"
   mode: 0775
  become: yes
  when: not dir.stat.exists and not filedir.matched > 0

- name: Start acfsload
  shell: "{{oracle_home_gi}}/bin/acfsload start"
  when: create_acfs
  environment: "{{ oracle_env }}"
  become: yes

- name: Create ACFS Volume
  shell: "asmcmd volcreate -G {{ diskgroup }} -s {{ size}} {{ volname }}"
  environment: "{{ oracle_env }}"
  when: create_acfs and checkvol.rc != 0
  register: volcreate
  tags: volcreate

- name: Get Volume Device
  shell: "asmcmd volinfo -G {{ diskgroup }} {{ volname }} | grep 'Volume Device' | awk '{print $3}'"
  environment: "{{ oracle_env }}"
  when: create_acfs
  register: getvol
  tags: getvol

- name: Make Filesystem
  shell: "mkfs -V acfs {{ getvol.stdout }}"
  environment: "{{ oracle_env }}"
  when: create_acfs
  tags: mkacfs

- name: Mount
  shell: "mount -v acfs {{ getvol.stdout }} {{ path }}"
  environment: "{{ oracle_env }}"
  when: create_acfs
  become: yes
  tags: mountacfs
